{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nicole\\\\OneDrive\\\\PPC-updated\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from 'react-navigation-stack';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Home from \"./Screens/Home\";\nimport SettingsScreen from \"./Screens/SettingsScreen\";\nimport LogoBarImage from \"./LogoBarImage\";\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    'opensans-bold': require(\"./assets/fonts/OpenSans-Bold.ttf\"),\n    'opensans-italic': require(\"./assets/fonts/OpenSans-Italic.ttf\"),\n    'opensans-regular': require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    'opensans-light': require(\"./assets/fonts/OpenSans-Light.ttf\")\n  });\n};\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.fontsLoaded) {\n        return React.createElement(AppLoading, {\n          startAsync: fetchFonts,\n          onFinish: function onFinish() {\n            return _this2.setState({\n              fontsLoaded: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(AppContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar AppNavigator = createStackNavigator({\n  Home: {\n    screen: Home,\n    navigationOptions: {\n      title: 'Nearby prices for ',\n      headerLeft: function headerLeft() {\n        return React.createElement(LogoBarImage, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 26\n          }\n        });\n      },\n      headerTitleAlign: 'center',\n      headerStyle: {\n        backgroundColor: '#ffd520'\n      },\n      headerTitleStyle: {\n        fontSize: 25,\n        fontFamily: 'opensans-bold'\n      }\n    }\n  },\n  SettingsScreen: {\n    screen: SettingsScreen,\n    navigationOptions: {\n      title: 'Settings',\n      headerTitleAlign: 'center',\n      headerStyle: {\n        backgroundColor: '#ffd520'\n      },\n      headerTitleStyle: {\n        fontSize: 25,\n        fontFamily: 'opensans-bold'\n      }\n    }\n  }\n}, {\n  initialRouteName: \"Home\"\n});\nvar AppContainer = createAppContainer(AppNavigator);","map":{"version":3,"sources":["C:/Users/Nicole/OneDrive/PPC-updated/App.js"],"names":["React","createAppContainer","createStackNavigator","Font","AppLoading","Home","SettingsScreen","LogoBarImage","fetchFonts","loadAsync","require","App","state","fontsLoaded","setState","Component","AppNavigator","screen","navigationOptions","title","headerLeft","headerTitleAlign","headerStyle","backgroundColor","headerTitleStyle","fontSize","fontFamily","initialRouteName","AppContainer"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,IAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACjB,SAAOL,IAAI,CAACM,SAAL,CAAe;AACtB,qBAAiBC,OAAO,oCADF;AAEtB,uBAAmBA,OAAO,sCAFJ;AAGtB,wBAAoBA,OAAO,uCAHL;AAItB,sBAAkBA,OAAO;AAJH,GAAf,CAAP;AAMP,CAPD;;IASqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACJC,MAAAA,WAAW,EAAE;AADT,K;;;;;;6BAIC;AAAA;;AACP,UAAI,CAAC,KAAKD,KAAL,CAAWC,WAAhB,EAA4B;AAC1B,eACE,oBAAC,UAAD;AACE,UAAA,UAAU,EAAEL,UADd;AAEE,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACM,QAAL,CAAc;AAACD,cAAAA,WAAW,EAAE;AAAd,aAAd,CAAN;AAAA,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,aAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAf8Bb,KAAK,CAACe,S;;SAAlBJ,G;AAmBrB,IAAMK,YAAY,GAAGd,oBAAoB,CACzC;AACEG,EAAAA,IAAI,EAAE;AACJY,IAAAA,MAAM,EAAEZ,IADJ;AAEJa,IAAAA,iBAAiB,EAAE;AACfC,MAAAA,KAAK,EAAE,oBADQ;AAEfC,MAAAA,UAAU,EAAE;AAAA,eAAK,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL;AAAA,OAFG;AAGfC,MAAAA,gBAAgB,EAAE,QAHH;AAIfC,MAAAA,WAAW,EAAE;AACTC,QAAAA,eAAe,EAAE;AADR,OAJE;AAOfC,MAAAA,gBAAgB,EAAC;AACbC,QAAAA,QAAQ,EAAE,EADG;AAEbC,QAAAA,UAAU,EAAE;AAFC;AAPF;AAFf,GADR;AAgBEpB,EAAAA,cAAc,EAAE;AACdW,IAAAA,MAAM,EAAEX,cADM;AAEdY,IAAAA,iBAAiB,EAAE;AACfC,MAAAA,KAAK,EAAE,UADQ;AAEfE,MAAAA,gBAAgB,EAAE,QAFH;AAGfC,MAAAA,WAAW,EAAE;AACTC,QAAAA,eAAe,EAAE;AADR,OAHE;AAMfC,MAAAA,gBAAgB,EAAC;AACbC,QAAAA,QAAQ,EAAE,EADG;AAEbC,QAAAA,UAAU,EAAE;AAFC;AANF;AAFL;AAhBlB,CADyC,EAiCrC;AACIC,EAAAA,gBAAgB,EAAE;AADtB,CAjCqC,CAAzC;AAuCA,IAAMC,YAAY,GAAG3B,kBAAkB,CAACe,YAAD,CAAvC","sourcesContent":["import React from 'react';\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\nimport * as Font from 'expo-font';\r\nimport { AppLoading } from 'expo';\r\nimport Home from './Screens/Home';\r\nimport SettingsScreen from './Screens/SettingsScreen';\r\nimport LogoBarImage from './LogoBarImage';\r\n\r\n//Function to retrieve and loads custom fonts\r\nconst fetchFonts = () => {\r\n        return Font.loadAsync({\r\n        'opensans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\r\n        'opensans-italic': require('./assets/fonts/OpenSans-Italic.ttf'),\r\n        'opensans-regular': require('./assets/fonts/OpenSans-Regular.ttf'),\r\n        'opensans-light': require('./assets/fonts/OpenSans-Light.ttf')\r\n        });\r\n};\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n      fontsLoaded: false,\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded){\r\n      return(\r\n        <AppLoading\r\n          startAsync={fetchFonts}\r\n          onFinish={() => this.setState({fontsLoaded: true})}/>\r\n      )\r\n    }\r\n\r\n    return <AppContainer />;\r\n  }\r\n}\r\n\r\n//Navigation Bar\r\nconst AppNavigator = createStackNavigator(\r\n{\r\n  Home: {\r\n    screen: Home,\r\n    navigationOptions: {\r\n        title: 'Nearby prices for ',\r\n        headerLeft: ()=> <LogoBarImage />,\r\n        headerTitleAlign: 'center',\r\n        headerStyle: {\r\n            backgroundColor: '#ffd520',\r\n        },\r\n        headerTitleStyle:{\r\n            fontSize: 25,\r\n            fontFamily: 'opensans-bold',\r\n        }\r\n    },\r\n  },\r\n  SettingsScreen: {\r\n    screen: SettingsScreen,\r\n    navigationOptions: {\r\n        title: 'Settings',\r\n        headerTitleAlign: 'center',\r\n        headerStyle: {\r\n            backgroundColor: '#ffd520',\r\n        },\r\n        headerTitleStyle:{\r\n            fontSize: 25,\r\n            fontFamily: 'opensans-bold',\r\n        }\r\n    },\r\n  },\r\n},\r\n\r\n    {\r\n        initialRouteName: \"Home\"\r\n    }\r\n\r\n);\r\n\r\nconst AppContainer = createAppContainer(AppNavigator);\r\n"]},"metadata":{},"sourceType":"module"}